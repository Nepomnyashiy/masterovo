version: "3.8"

services:
  # PostgreSQL - основная база данных
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - ../../storage/postgres:/var/lib/postgresql/data
    networks:
      - database_network

  # MongoDB - для хранения real-time данных
  mongo:
    image: mongo:6
    container_name: mongo_db
    restart: unless-stopped
    env_file: .env
    ports:
      - "27017:27017"
    volumes:
      - ../../storage/mongo:/data/db
    networks:
      - database_network

  # Redis - кэш и поддержка WebSockets
  redis:
    image: redis:7
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ../../storage/redis:/data
    networks:
      - backend_network

  # IPFS - хранение NFT-изображений
  ipfs:
    image: ipfs/go-ipfs
    container_name: ipfs_node
    restart: unless-stopped
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ../../storage/ipfs:/data/ipfs
    networks:
      - backend_network

  # Backend (NestJS)
  backend:
    build: ../../backend
    container_name: nestjs_backend
    restart: unless-stopped
    depends_on:
      - postgres
      - mongo
      - redis
      - ipfs
    env_file: .env
    ports:
      - "4000:4000"
    networks:
      - backend_network
      - database_network

  # Frontend (Next.js)
  frontend:
    build: ../../frontend
    container_name: nextjs_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - frontend_network
      - backend_network

  # Nginx - обратный прокси
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../security/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../../security/nginx/certs:/etc/letsencrypt
    networks:
      - frontend_network
    depends_on:
      - frontend

  # ClickHouse - хранилище для метрик
  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse_db
    restart: unless-stopped
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ../../storage/clickhouse:/var/lib/clickhouse
    networks:
      - monitoring_network

  # Prometheus - сбор метрик
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ../../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  # Grafana - визуализация метрик
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    networks:
      - monitoring_network
    volumes:
      - ../../monitoring/grafana:/var/lib/grafana

  # Loki - система логирования
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ../../monitoring/loki:/data/loki
    networks:
      - monitoring_network

  # Promtail - агент сбора логов
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ../../monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    networks:
      - monitoring_network

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
  database_network:
    driver: bridge
  monitoring_network:
    driver: bridge
