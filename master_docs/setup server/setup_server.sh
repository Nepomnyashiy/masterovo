#!/bin/bash

# === 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã ===
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# === 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ ===
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ç–∏–ª–∏—Ç..."
sudo apt install -y curl wget git unzip htop ufw fail2ban gnupg lsb-release ca-certificates software-properties-common rsync

# === 3. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å sudo ===
read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " NEW_USER
sudo adduser $NEW_USER
sudo usermod -aG sudo $NEW_USER
sudo usermod -aG docker $NEW_USER
echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $NEW_USER –¥–æ–±–∞–≤–ª–µ–Ω –≤ sudo –∏ Docker."

# === 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH ===
echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH..."
sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config
sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
sudo systemctl restart sshd
echo "‚úÖ Root –¥–æ—Å—Ç—É–ø –æ—Ç–∫–ª—é—á–µ–Ω, —Ç–æ–ª—å–∫–æ –∫–ª—é—á–∏ SSH!"

# === 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞ (UFW) ===
echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞..."
sudo ufw allow OpenSSH
sudo ufw allow 80,443/tcp  # HTTP / HTTPS
sudo ufw allow 4000/tcp  # Backend API
sudo ufw allow 3000/tcp  # Frontend
sudo ufw allow 9090/tcp  # Prometheus
sudo ufw allow 3001/tcp  # Grafana
sudo ufw allow 9100/tcp  # Node Exporter
sudo ufw enable
echo "‚úÖ UFW –Ω–∞—Å—Ç—Ä–æ–µ–Ω."

# === 6. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose ===
echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose..."
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
sudo systemctl enable --now docker
echo "‚úÖ Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."

# === 7. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–æ–≤ ===
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
PROJECT_DIR="/home/$NEW_USER/masterovo"
mkdir -p $PROJECT_DIR/{backend,frontend,blockchain,storage,logs,devops,monitoring,database,security,backup}
mkdir -p $PROJECT_DIR/backend/{src,config,test}
mkdir -p $PROJECT_DIR/frontend/{src,public,components,pages,store}
mkdir -p $PROJECT_DIR/blockchain/{solana,polygon,deploy}
mkdir -p $PROJECT_DIR/storage/{postgres,mongo,redis,ipfs}
mkdir -p $PROJECT_DIR/logs/{nginx,backend,frontend}
mkdir -p $PROJECT_DIR/devops/{docker,kubernetes,ansible,ci-cd}
mkdir -p $PROJECT_DIR/monitoring/{prometheus,grafana,loki,promtail}
mkdir -p $PROJECT_DIR/database/{migrations,seeders}
mkdir -p $PROJECT_DIR/security/{secrets,nginx}
echo "‚úÖ –ö–∞—Ç–∞–ª–æ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã!"

# === 8. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL, Redis, Prometheus, Grafana ===
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL, Redis, Prometheus, Grafana..."
sudo apt install -y postgresql redis-server prometheus grafana
sudo systemctl enable --now postgresql redis-server prometheus grafana
echo "‚úÖ –ë–î –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."

# === 9. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban ===
echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban..."
sudo systemctl enable --now fail2ban
echo "[sshd]" | sudo tee /etc/fail2ban/jail.local
echo "enabled = true" | sudo tee -a /etc/fail2ban/jail.local
echo "bantime = 3600" | sudo tee -a /etc/fail2ban/jail.local
echo "findtime = 600" | sudo tee -a /etc/fail2ban/jail.local
echo "maxretry = 3" | sudo tee -a /etc/fail2ban/jail.local
sudo systemctl restart fail2ban
echo "‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –±—Ä—É—Ç—Ñ–æ—Ä—Å–∞ –≤–∫–ª—é—á–µ–Ω–∞!"

# === 10. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î –∏ –ª–æ–≥–æ–≤ ===
echo "üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
BACKUP_DIR="$PROJECT_DIR/backup"
mkdir -p $BACKUP_DIR

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è PostgreSQL –∏ –ª–æ–≥–æ–≤
BACKUP_SCRIPT="$BACKUP_DIR/backup.sh"
echo "#!/bin/bash" > $BACKUP_SCRIPT
echo "TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')" >> $BACKUP_SCRIPT
echo "pg_dumpall -U postgres > $BACKUP_DIR/postgres_backup_\$TIMESTAMP.sql" >> $BACKUP_SCRIPT
echo "tar -czf $BACKUP_DIR/logs_backup_\$TIMESTAMP.tar.gz $PROJECT_DIR/logs" >> $BACKUP_SCRIPT
echo "echo '‚úÖ –ë—ç–∫–∞–ø –∑–∞–≤–µ—Ä—à–µ–Ω: \$TIMESTAMP'" >> $BACKUP_SCRIPT
chmod +x $BACKUP_SCRIPT

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ cron –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
(crontab -l 2>/dev/null; echo "0 2 * * * $BACKUP_SCRIPT") | crontab -
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î –∏ –ª–æ–≥–æ–≤!"

# === 11. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swap (–µ—Å–ª–∏ RAM < 8GB) ===
RAM=$(free -m | awk '/^Mem:/{print $2}')
if [ "$RAM" -lt 8000 ]; then
    echo "üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swap (RAM < 8GB)..."
    sudo fallocate -l 4G /swapfile
    sudo chmod 600 /swapfile
    sudo mkswap /swapfile
    sudo swapon /swapfile
    echo "/swapfile swap swap defaults 0 0" | sudo tee -a /etc/fstab
    echo "‚úÖ Swap (4GB) –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
fi

# === 12. –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã ===
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt autoremove -y && sudo apt autoclean -y
echo "‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –∫ —Ä–∞–±–æ—Ç–µ!"

echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: sudo reboot"
