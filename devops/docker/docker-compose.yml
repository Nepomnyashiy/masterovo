version: "3.8"

secrets:
  postgres_password:
    file: ./secrets/postgres_password
  mongo_password:
    file: ./secrets/mongo_password

services:
  # PostgreSQL - основная БД для пользователей, магазинов, заказов
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_password
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - database_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 10s

  # MongoDB - для лайков, комментариев, real-time взаимодействий
  mongo:
    image: mongo:6
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_password
    secrets:
      - mongo_password
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/mongo:/data/db
    networks:
      - database_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ping:1})"]
      interval: 10s
      retries: 5
      start_period: 10s

  # Alertmanager - система алертов для мониторинга
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: always
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - monitoring_network

  # Node Exporter - мониторинг ресурсов сервера
  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - monitoring_network

  # Blackbox Exporter - мониторинг доступности сервисов
  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox_exporter
    restart: always
    ports:
      - "9115:9115"
    networks:
      - monitoring_network

  # Prometheus - сбор метрик
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  # Grafana - визуализация метрик
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    networks:
      - monitoring_network
    volumes:
      - ./volumes/grafana:/var/lib/grafana

  # Loki - система логирования
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - ./volumes/loki:/data/loki
    networks:
      - monitoring_network

  # Promtail - агент сбора логов
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    volumes:
      - ./config/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    networks:
      - monitoring_network

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
  database_network:
    driver: bridge
  monitoring_network:
    driver: bridge
